# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-11-13 02:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='分店ID')),
                ('address', models.CharField(max_length=200, verbose_name='分店地址')),
                ('isDelete', models.BooleanField(default=False)),
                ('test1', models.CharField(default='DXZ', max_length=10, verbose_name='测试')),
            ],
            options={
                'verbose_name': '分店',
                'verbose_name_plural': '分店',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='管理员ID')),
                ('phone', models.CharField(max_length=20, verbose_name='管理员手机号')),
                ('email', models.EmailField(max_length=254, verbose_name='管理员邮箱')),
                ('password', models.CharField(max_length=30, verbose_name='管理亚密码')),
            ],
            options={
                'verbose_name': '管理员',
                'verbose_name_plural': '管理员',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='课程ID')),
                ('name', models.CharField(max_length=20, verbose_name='课程名称')),
                ('content', models.CharField(max_length=20, verbose_name='课程介绍')),
                ('date', models.DateTimeField(verbose_name='时间')),
                ('max_number', models.IntegerField(verbose_name='课程容纳最多人数')),
                ('current_number', models.IntegerField(default=0, verbose_name='当前选课人数')),
                ('isDelete', models.BooleanField(default=False)),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Address', verbose_name='本课程所属分店')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
            },
        ),
        migrations.CreateModel(
            name='Course2Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isDelete', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Course')),
            ],
            options={
                'verbose_name': '学生课程关联表',
                'verbose_name_plural': '学生课程关联表',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='学生ID')),
                ('openid', models.CharField(max_length=50, verbose_name='微信OPENID')),
                ('name', models.CharField(max_length=20, verbose_name='微信昵称')),
                ('real_name', models.CharField(default='尚未录入真实姓名', max_length=20, verbose_name='真实姓名')),
                ('test1', models.CharField(default='DXZ', max_length=10, verbose_name='测试')),
                ('phone', models.CharField(default='尚未录入手机号', max_length=20, verbose_name='学生手机号')),
                ('password', models.CharField(max_length=100, verbose_name='学生密码')),
                ('gender', models.CharField(choices=[('0', '未知'), ('1', '男'), ('2', '女')], max_length=5, verbose_name='性别')),
                ('age', models.CharField(max_length=10, verbose_name='学生年龄')),
                ('content', models.CharField(max_length=20, verbose_name='学生个人介绍')),
                ('isDelete', models.BooleanField(default=False)),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Address', verbose_name='所属分店')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='老师ID')),
                ('openid', models.CharField(max_length=50, verbose_name='微信OPENID')),
                ('name', models.CharField(max_length=20, verbose_name='老师姓名')),
                ('gender', models.BooleanField(choices=[(0, '男'), (1, '女')], verbose_name='性别')),
                ('age', models.CharField(max_length=10, verbose_name='老师年龄')),
                ('content', models.CharField(max_length=20, verbose_name='老师个人介绍')),
                ('isDelete', models.BooleanField(default=False)),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Address', verbose_name='老师所属分店')),
            ],
            options={
                'verbose_name': '老师',
                'verbose_name_plural': '老师',
            },
        ),
        migrations.CreateModel(
            name='VIP2Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateField(verbose_name='会员开始日期')),
                ('end_time', models.DateField(verbose_name='会员截止日期')),
                ('isDelete', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Student')),
            ],
            options={
                'verbose_name': '学生会员',
                'verbose_name_plural': '学生会员',
            },
        ),
        migrations.CreateModel(
            name='VIPType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='会员种类ID')),
                ('name', models.CharField(max_length=50, verbose_name='会员名称')),
                ('students', models.ManyToManyField(through='mcdb.VIP2Student', to='mcdb.Student', verbose_name='本种类会员下的学生')),
            ],
            options={
                'verbose_name': '会员类别',
                'verbose_name_plural': '会员类别',
            },
        ),
        migrations.AddField(
            model_name='vip2student',
            name='vip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.VIPType'),
        ),
        migrations.AddField(
            model_name='course2student',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Student'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(through='mcdb.Course2Student', to='mcdb.Student', verbose_name='本课程的学生'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcdb.Teacher', verbose_name='本课程所属老师'),
        ),
        migrations.AlterUniqueTogether(
            name='vip2student',
            unique_together=set([('vip', 'student', 'start_time')]),
        ),
        migrations.AlterUniqueTogether(
            name='course2student',
            unique_together=set([('course', 'student')]),
        ),
    ]
